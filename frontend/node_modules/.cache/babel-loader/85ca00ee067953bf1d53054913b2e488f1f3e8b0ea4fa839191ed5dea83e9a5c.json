{"ast":null,"code":"var _jsxFileName = \"/Users/roddy/Desktop/icb-app/frontend/src/components/ButtonContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createNewGameSession, resetTimeDisplay, resetScoreDisplay, startStopwatch, stopTimeDisplay, resetLoopDisplay, resetHoleDisplay } from '../utils/api';\nimport './styles/ButtonContainer.css';\n\n/**\n * ButtonContainer component that handles game start and end actions.\n * @param {Object} props - Component props.\n * @param {Function} props.setCountdown - Function to set the countdown timer.\n * @param {Function} props.setGameSessionId - Function to set the game session ID.\n * @param {string} props.gameSessionId - The current game session ID.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonContainer = ({\n  setCountdown,\n  setGameSessionId,\n  gameSessionId\n}) => {\n  _s();\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const handleStartGame = () => {\n    setCountdown(3);\n    setTimeout(() => {\n      stopTimeDisplay();\n      resetTimeDisplay();\n      resetScoreDisplay();\n      resetLoopDisplay();\n      createNewGameSession().then(gameSessionId => {\n        setGameSessionId(gameSessionId);\n        startStopwatch();\n        setIsGameStarted(true);\n      });\n    }, 3000);\n  };\n  const handleEndGame = () => {\n    stopTimeDisplay();\n    resetTimeDisplay();\n    resetScoreDisplay();\n    resetLoopDisplay();\n    if (gameSessionId) {\n      fetch(`/api/game_session/${gameSessionId}/end/`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          console.log('Game session ended successfully');\n        } else {\n          console.error('Failed to end game session');\n        }\n      });\n    }\n    setIsGameStarted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: isGameStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"end-game-btn\",\n      onClick: handleEndGame,\n      children: \"End Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"start-game-btn\",\n      onClick: handleStartGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ButtonContainer, \"wykcya2tgnfvYe7esQwzXYHhwzQ=\");\n_c = ButtonContainer;\nexport default ButtonContainer;\nvar _c;\n$RefreshReg$(_c, \"ButtonContainer\");","map":{"version":3,"names":["React","useState","createNewGameSession","resetTimeDisplay","resetScoreDisplay","startStopwatch","stopTimeDisplay","resetLoopDisplay","resetHoleDisplay","jsxDEV","_jsxDEV","ButtonContainer","setCountdown","setGameSessionId","gameSessionId","_s","isGameStarted","setIsGameStarted","handleStartGame","setTimeout","then","handleEndGame","fetch","method","headers","response","ok","console","log","error","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roddy/Desktop/icb-app/frontend/src/components/ButtonContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createNewGameSession, resetTimeDisplay, resetScoreDisplay, startStopwatch, stopTimeDisplay, resetLoopDisplay, resetHoleDisplay } from '../utils/api';\nimport './styles/ButtonContainer.css';\n\n/**\n * ButtonContainer component that handles game start and end actions.\n * @param {Object} props - Component props.\n * @param {Function} props.setCountdown - Function to set the countdown timer.\n * @param {Function} props.setGameSessionId - Function to set the game session ID.\n * @param {string} props.gameSessionId - The current game session ID.\n */\nconst ButtonContainer = ({ setCountdown, setGameSessionId, gameSessionId }) => {\n    const [isGameStarted, setIsGameStarted] = useState(false);\n\n    const handleStartGame = () => {\n        setCountdown(3);\n        setTimeout(() => {\n            stopTimeDisplay();\n            resetTimeDisplay();\n            resetScoreDisplay();\n            resetLoopDisplay();\n            createNewGameSession().then((gameSessionId) => {\n                setGameSessionId(gameSessionId);\n                startStopwatch();\n                setIsGameStarted(true);\n            });\n        }, 3000);\n    };\n\n    const handleEndGame = () => {\n        stopTimeDisplay();\n        resetTimeDisplay();\n        resetScoreDisplay();\n        resetLoopDisplay();\n        if (gameSessionId) {\n            fetch(`/api/game_session/${gameSessionId}/end/`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then((response) => {\n                if (response.ok) {\n                    console.log('Game session ended successfully');\n                } else {\n                    console.error('Failed to end game session');\n                }\n            });\n        }\n        setIsGameStarted(false);\n    };\n\n    return (\n        <div className=\"button-container\">\n            {isGameStarted ? (\n                <button id=\"end-game-btn\" onClick={handleEndGame}>End Game</button>\n            ) : (\n                <button id=\"start-game-btn\" onClick={handleStartGame}>Start Game</button>\n            )}\n        </div>\n    );\n};\n\nexport default ButtonContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,cAAc;AAC7J,OAAO,8BAA8B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC,gBAAgB;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC1BN,YAAY,CAAC,CAAC,CAAC;IACfO,UAAU,CAAC,MAAM;MACbb,eAAe,CAAC,CAAC;MACjBH,gBAAgB,CAAC,CAAC;MAClBC,iBAAiB,CAAC,CAAC;MACnBG,gBAAgB,CAAC,CAAC;MAClBL,oBAAoB,CAAC,CAAC,CAACkB,IAAI,CAAEN,aAAa,IAAK;QAC3CD,gBAAgB,CAACC,aAAa,CAAC;QAC/BT,cAAc,CAAC,CAAC;QAChBY,gBAAgB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBf,eAAe,CAAC,CAAC;IACjBH,gBAAgB,CAAC,CAAC;IAClBC,iBAAiB,CAAC,CAAC;IACnBG,gBAAgB,CAAC,CAAC;IAClB,IAAIO,aAAa,EAAE;MACfQ,KAAK,CAAC,qBAAqBR,aAAa,OAAO,EAAE;QAC7CS,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CAACJ,IAAI,CAAEK,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACbC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAClD,CAAC,MAAM;UACHD,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACJ,CAAC,CAAC;IACN;IACAZ,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACIP,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC5Bf,aAAa,gBACVN,OAAA;MAAQsB,EAAE,EAAC,cAAc;MAACC,OAAO,EAAEZ,aAAc;MAAAU,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEnE3B,OAAA;MAAQsB,EAAE,EAAC,gBAAgB;MAACC,OAAO,EAAEf,eAAgB;MAAAa,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAC3E;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CAjDIJ,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAmDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}